{"version":3,"sources":["components/HomePage.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","PersonRow","singlePerson","className","name","sex","born","died","father","mother","PeopleTable","arr","useEffect","map","person","slug","PeoplePage","url","useState","people","setPeople","a","fetch","then","response","json","data","el","find","e","motherName","fatherName","getPeople","App","to","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"+OAAaA,EAAW,kBACtB,4C,sCCKWC,G,MAA8B,SAAC,GAAsB,IAAD,IAAnBC,EAAmB,EAAnBA,aAC5C,OACE,+BACE,oBAAIC,UAAU,OAAd,SAAsBD,EAAaE,OACnC,oBAAID,UAAU,OAAd,SAAsBD,EAAaG,MACnC,oBAAIF,UAAU,OAAd,SAAsBD,EAAaI,OACnC,oBAAIH,UAAU,OAAd,SAAsBD,EAAaK,OACnC,oBAAIJ,UAAU,OAAd,mBAAsBD,EAAaM,cAAnC,aAAsB,EAAqBJ,OAC3C,oBAAID,UAAU,OAAd,mBAAsBD,EAAaO,cAAnC,aAAsB,EAAqBL,YCLpCM,EAAgC,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAI9C,OAHAC,qBAAU,cACP,CAACD,IAGF,qCACE,uCACA,wBAAOR,UAAU,QAAjB,UACE,uBAAOA,UAAU,OAAjB,SACE,qBAAIA,UAAU,MAAd,UACE,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,OAAd,iBACA,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,OAAd,oBACA,oBAAIA,UAAU,OAAd,yBAGJ,uCACGQ,QADH,IACGA,OADH,EACGA,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAAWZ,aAAcY,GAAaA,EAAOC,kBCxB5CC,EAAwB,WACnC,IAAMC,EACJ,oEACF,EAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KAmBA,OAjBAR,qBAAU,WAAM,4CACd,sBAAAS,EAAA,sDACEC,MAAML,GACHM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EACZM,EAAKb,KAAI,SAACc,GAIR,OAHAA,EAAGlB,OAASiB,EAAKE,MAAK,SAACC,GAAD,OAAgBA,EAAEzB,OAASuB,EAAGG,cACpDH,EAAGnB,OAASkB,EAAKE,MAAK,SAACC,GAAD,OAAgBA,EAAEzB,OAASuB,EAAGI,cAE7CJ,SARf,4CADc,uBAAC,WAAD,wBAcdK,KACC,IAGD,qCACE,6CACA,cAAC,EAAD,CAAarB,IAAKQ,QCHTc,EApBH,kBACV,qCACE,gCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,uBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUF,GAAG,IAAIG,SAAO,MACrD,cAAC,IAAD,CACEF,KAAK,IACLC,QACE,wDCfVE,IAASC,OAEL,cAAC,IAAD,UACE,cAAC,EAAD,MAGJC,SAASC,eAAe,W","file":"static/js/main.d22b110b.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","import { People } from '../Types';\n\ninterface Props {\n  singlePerson : People\n}\n\nexport const PersonRow : React.FC<Props> = ({ singlePerson }) => {\n  return (\n    <tr>\n      <td className=\"cell\">{singlePerson.name}</td>\n      <td className=\"cell\">{singlePerson.sex}</td>\n      <td className=\"cell\">{singlePerson.born}</td>\n      <td className=\"cell\">{singlePerson.died}</td>\n      <td className=\"cell\">{singlePerson.father?.name}</td>\n      <td className=\"cell\">{singlePerson.mother?.name}</td>\n    </tr>\n  );\n};\n","import { useEffect } from 'react';\nimport { People } from '../Types';\nimport './PeopleTable.scss';\nimport { PersonRow } from './PersonRow';\n\ninterface Props {\n  arr?: People[];\n}\n\nexport const PeopleTable : React.FC<Props> = ({ arr }) => {\n  useEffect(() => {\n  }, [arr]);\n\n  return (\n    <>\n      <h1>Table</h1>\n      <table className=\"table\">\n        <thead className=\"head\">\n          <tr className=\"row\">\n            <th className=\"cell\">name</th>\n            <th className=\"cell\">sex</th>\n            <th className=\"cell\">born</th>\n            <th className=\"cell\">died</th>\n            <th className=\"cell\">mother</th>\n            <th className=\"cell\">father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {arr?.map((person : People) => (\n            <PersonRow singlePerson={person} key={person.slug} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","/* eslint-disable no-param-reassign */\nimport { useEffect, useState } from 'react';\nimport { People } from '../Types';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage : React.FC = () => {\n  const url\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n  const [people, setPeople] = useState<People[]>();\n\n  useEffect(() => {\n    async function getPeople() {\n      fetch(url)\n        .then(response => response.json())\n        .then(data => setPeople(\n          data.map((el : People) => {\n            el.mother = data.find((e : People) => e.name === el.motherName);\n            el.father = data.find((e : People) => e.name === el.fatherName);\n\n            return el;\n          }),\n        ));\n    }\n\n    getPeople();\n  }, []);\n\n  return (\n    <>\n      <h1>People page</h1>\n      <PeopleTable arr={people} />\n    </>\n  );\n};\n","import {\n  Link, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst App = () => (\n  <>\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/people\">People</Link>\n    </nav>\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route\n        path=\"*\"\n        element={\n          <p>Page not found</p>\n        }\n      />\n    </Routes>\n  </>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  (\n    <Router>\n      <App />\n    </Router>\n  ),\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}